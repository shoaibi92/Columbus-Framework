<#@ template language="C#" #>
<#@ import namespace="System.Linq" #>
<#@ parameter type="Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.BusinessView" name="view" #>
<#@ parameter type="Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings" name="settings" #>
<#
   // Locals
    var moduleId = settings.ModuleId;
    var copyright = settings.Copyright;
    var companyNamespace = settings.CompanyNamespace;
    var modelName = view.Properties[BusinessView.ModelName];
    var entityName = view.Properties[BusinessView.EntityName];

    var webModuleNamespace = settings.DoesAreasExist ? "Web.Areas." + moduleId : moduleId + ".Web";
#>
// <#=copyright#>

#region Namespace

using System;
using System.Collections.Generic;
using Microsoft.Practices.Unity;
using Sage.CA.SBS.ERP.Sage300.Common.Interfaces.Service.Base;
using Sage.CA.SBS.ERP.Sage300.Common.Models;
using Sage.CA.SBS.ERP.Sage300.Common.Models.Process;
using Sage.CA.SBS.ERP.Sage300.Common.Resources;
using Sage.CA.SBS.ERP.Sage300.Common.Web.Controllers.Reports;
using <#=companyNamespace#>.<#=moduleId#>.Interfaces.Services.Reports;
using <#=companyNamespace#>.<#=moduleId#>.Models.Reports;
using <#=companyNamespace#>.<#=webModuleNamespace#>.Models.Reports;

#endregion

namespace <#=companyNamespace#>.<#=webModuleNamespace#>.Controllers.Reports
{
    /// <summary>
    /// Internal controller for <#=entityName#>
    /// </summary>
    /// <typeparam name="T"><#=modelName#></typeparam>
    /// <typeparam name="TViewModel"><#=entityName#>ViewModel</typeparam>
    /// <typeparam name="TService">I<#=entityName#>Service</typeparam>
    public class <#=entityName#>ControllerInternal<T, TViewModel, TService> :
        ReportControllerInternal<T, TViewModel, TService>
        where T : <#=modelName#>, new()
        where TViewModel : <#=entityName#>ViewModel<T>, new()
        where TService : I<#=entityName#>Service<T>
    {
        #region Constructor

        /// <summary>
        /// Constructor for <#=entityName#>
        /// </summary>
        /// <param name="context">Context</param>
        public <#=entityName#>ControllerInternal(Context context)
            : base(context)
        {
        }

        #endregion

    }
}
