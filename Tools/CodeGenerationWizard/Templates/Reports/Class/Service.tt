<#@ template language="C#" #>
<#@ import namespace="System.Linq" #>
<#@ parameter type="Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.BusinessView" name="view" #>
<#@ parameter type="Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings" name="settings" #>
<#
    // Locals
    var moduleId = settings.ModuleId;
    var copyright = settings.Copyright;
    var companyNamespace = settings.CompanyNamespace;
    var modelName = view.Properties[BusinessView.ModelName];
    var entityName = view.Properties[BusinessView.EntityName];
#>
// <#=copyright#>

#region Namespace

using Sage.CA.SBS.ERP.Sage300.Common.Models;
using Sage.CA.SBS.ERP.Sage300.Common.Services.Base;
using <#=companyNamespace#>.<#=moduleId#>.Interfaces.BusinessRepository.Reports;
using <#=companyNamespace#>.<#=moduleId#>.Interfaces.Services.Reports;
using <#=companyNamespace#>.<#=moduleId#>.Models;
using <#=companyNamespace#>.<#=moduleId#>.Models.Reports;

#endregion

namespace <#=companyNamespace#>.<#=moduleId#>.Services.Reports
{
    /// <summary>
    /// Service for <#=entityName#>
    /// </summary>
    /// <typeparam name="T"><#=modelName#></typeparam>
    public class <#=entityName#>Service<T> : BaseReportService<T, I<#=entityName#>Entity<T>>, I<#=entityName#>Service<T>
        where T : <#=modelName#>, new()
    {
        #region Constructor

        /// <summary>
        /// Constructor for <#=entityName#>
        /// </summary>
        /// <param name="context">Request Context</param>
        public <#=entityName#>Service(Context context)
            : base(context)
        {
        }
        #endregion

    }
}
