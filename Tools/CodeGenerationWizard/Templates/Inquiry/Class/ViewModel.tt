<#@ template language="C#" #>
<#@ import namespace="System.Linq" #>
<#@ parameter type="Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.BusinessView" name="view" #>
<#@ parameter type="Sage.CA.SBS.ERP.Sage300.CodeGenerationWizard.Settings" name="settings" #>
<#
    // Locals
    var moduleId = settings.ModuleId;
    var copyright = settings.Copyright;
    var companyNamespace = settings.CompanyNamespace;
    var modelName = view.Properties[BusinessView.ModelName];
    var entityName = view.Properties[BusinessView.EntityName];

    var webModuleNamespace = settings.DoesAreasExist ? "Web.Areas." + moduleId : moduleId + ".Web";
#>
// <#=copyright#>

#region Namespace

using System;
using System.Collections;
using Sage.CA.SBS.ERP.Sage300.Common.Web;
using Sage.CA.SBS.ERP.Sage300.Common.Models;
using <#=companyNamespace#>.<#=moduleId#>.Models;
using <#=companyNamespace#>.<#=moduleId#>.Models.Enums;

#endregion

namespace <#=companyNamespace#>.<#=webModuleNamespace#>.Models
{
    /// <summary>
    /// ViewModel for <#=entityName#>
    /// </summary>
    /// <typeparam name="T"><#=modelName#></typeparam>
    public class <#=entityName#>ViewModel<T> : ViewModelBase<T> where T : <#=modelName#>, new()
    {
<#
    foreach (var value in view.Enums.Values) 
    {
#>
        /// <summary>
        /// <#=value.Name#> list
        /// </summary>
        public IEnumerable <#=value.Name#>
        {
            get { return EnumUtility.GetItems<<#=value.Name#>>(); }
        }
<#
    }
#>
    }
}
